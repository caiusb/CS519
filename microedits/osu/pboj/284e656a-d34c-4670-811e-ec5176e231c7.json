{
  "userid": "pboj",
  "guid": "284e656a-d34c-4670-811e-ec5176e231c7",
  "lastStatus": "deleted",
  "items": [
    {
      "seqNo": 0,
      "time": 1356215429,
      "scriptId": "vlnh",
      "historyId": "2520460853701814333284e656a-d34c-4670-811e-ec5176e231c7",
      "updateSize": 20516,
      "ast": {
        "textVersion": "v2.2,js,ctx",
        "jsonVersion": "v1.0,resolved,short",
        "name": "tdUnit",
        "comment": "tdUnit is a prototype unit test framework for Touch Develop. It was created with a lot of help from the Touch Develop team. (Thanks!)",
        "icon": "tools",
        "autoIcon": "tools",
        "autoColor": "#B7410E",
        "platform": "current",
        "rootId": "r4P99NtQenuHRmJDjOZG86O8",
        "showAd": false,
        "isLibrary": true,
        "allowExport": false,
        "hasUniqueIds": false,
        "decls": [
          {
            "name": "current test",
            "comment": "Test being run\n",
            "type": "String",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "OwXKjIW2HtMnG4Xkkgoyi02B"
          },
          {
            "name": "tests",
            "comment": "Number of tests run\n",
            "type": "Number",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "eGrPwMhwpnCRCtFlV2VMnWJj"
          },
          {
            "name": "run test",
            "inParameters": [
              {
                "name": "name",
                "type": "String",
                "nodeType": "localDef",
                "id": "xpnLD4ZxxuT4alam0nXovRsKP0"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Tell tdUnit which test is about to run.",
                "nodeType": "comment",
                "id": "YSUJiPZlhij2yns4WG6oy8hi"
              },
              {
                "expr": ":data #eGrPwMhwpnCRCtFlV2VMnWJj ,:= :data #eGrPwMhwpnCRCtFlV2VMnWJj ,+ ,1",
                "nodeType": "exprStmt",
                "id": "PIoTaxCOVi2KLvdiN1VyKk8v",
                "locals": []
              },
              {
                "expr": ":data #OwXKjIW2HtMnG4Xkkgoyi02B ,:= $xpnLD4ZxxuT4alam0nXovRsKP0",
                "nodeType": "exprStmt",
                "id": "KXveajt4uSt2wEzLILKGzQXJ",
                "locals": []
              }
            ],
            "id": "xpnLD4ZxxuT4alam0nXovRsK"
          },
          {
            "name": "report current test",
            "inParameters": [],
            "outParameters": [
              {
                "name": "result",
                "type": "String",
                "nodeType": "localDef",
                "id": "D4q6KWfp4GTsglhqRcHbcwVxP0"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$D4q6KWfp4GTsglhqRcHbcwVxP0 ,:= :data #OwXKjIW2HtMnG4Xkkgoyi02B",
                "nodeType": "exprStmt",
                "id": "xqqhinGTehnwkUr1m4eU1fhX",
                "locals": []
              }
            ],
            "id": "D4q6KWfp4GTsglhqRcHbcwVx"
          },
          {
            "name": "no tests run",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":data #eGrPwMhwpnCRCtFlV2VMnWJj ,:= ,0",
                "nodeType": "exprStmt",
                "id": "xlO2e8ZQzYF4a8ev2LB2e24q",
                "locals": []
              }
            ],
            "id": "NQIkt4Fqhl16E4G3Uvo5JfAD"
          },
          {
            "name": "set up",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Set up test run.",
                "nodeType": "comment",
                "id": "JFSxbma8DU2pfDvPe3kCm0sQ"
              },
              {
                "expr": ":wall .set_reversed ,( T ,)",
                "nodeType": "exprStmt",
                "id": "UzPziRe6zqyT2SEsIFs5vyU5",
                "locals": []
              },
              {
                "expr": ":wall .set_title ,( 'tdUnit_0/002e3 ,)",
                "nodeType": "exprStmt",
                "id": "ZwrsdJ7cpaD3NnU4c2P2nGZ8",
                "locals": []
              },
              {
                "expr": ":wall .set_subtitle ,( 'Touch_Develop_Unit_Test_Framework_ ,)",
                "nodeType": "exprStmt",
                "id": "Mo43QNU8dC21b0GPY2nhpdO1",
                "locals": []
              },
              {
                "expr": ":data #OwXKjIW2HtMnG4Xkkgoyi02B ,:= '",
                "nodeType": "exprStmt",
                "id": "G4mDy2mvpCiqimOxR9cxO39i",
                "locals": []
              },
              {
                "expr": ":code #NQIkt4Fqhl16E4G3Uvo5JfAD",
                "nodeType": "exprStmt",
                "id": "PuT5oVev2SbQftOCN8Kuvmcd",
                "locals": []
              },
              {
                "expr": ":code #uPqTYDu2htWlhaCU44qQHoSC",
                "nodeType": "exprStmt",
                "id": "My4ZORpwqlsxkCAkHBDbDsNn",
                "locals": []
              },
              {
                "expr": ":code #Owv6FueE94Dnv2CwAR2nEaJQ",
                "nodeType": "exprStmt",
                "id": "JMeRtFK5bkRU0yHlRtwj2lh9",
                "locals": []
              },
              {
                "expr": ":code #waNI5VCinw1nLydfCCpNlY12",
                "nodeType": "exprStmt",
                "id": "hd02gzn46RJxFOvDfyrNpyMF",
                "locals": []
              }
            ],
            "id": "Fr3KrHo0CDCTE0Nj85WLY2Z2"
          },
          {
            "name": "tear down",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Finish test run.",
                "nodeType": "comment",
                "id": "JpPRg77ZR7Q2oo3JKqcTHDDT"
              },
              {
                "expr": ":code #B26iiRVJM009S7oL4ly7dhBJ",
                "nodeType": "exprStmt",
                "id": "d4hOgCCS1xaiufUyA2WfQweF",
                "locals": []
              },
              {
                "expr": ",( :code #VteExhK8V2zN74en6gVkaIN9 ,∥ '_run_in_ ,∥ :code #x5Hlee8UxuOp4WGsAWP19x74 ,∥ '/002c_ ,∥ :code #UtOPSR2whn2RRA9NWGBxD2cB ,) .post_to_wall",
                "nodeType": "exprStmt",
                "id": "P9wrGmqUX6mDYhdLxsKoFXc4",
                "locals": []
              }
            ],
            "id": "JVReBfJgGlCRkswqaZh5hxAe"
          },
          {
            "name": "report tests run",
            "inParameters": [],
            "outParameters": [
              {
                "name": "result",
                "type": "String",
                "nodeType": "localDef",
                "id": "VteExhK8V2zN74en6gVkaIN9P0"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$VteExhK8V2zN74en6gVkaIN9P0 ,:= :data #eGrPwMhwpnCRCtFlV2VMnWJj .to_string ,∥ '_test",
                "nodeType": "exprStmt",
                "id": "bsbhgeruWB8RbG8t6hBPeLYM",
                "locals": []
              },
              {
                "nodeType": "if",
                "condition": ",( :data #eGrPwMhwpnCRCtFlV2VMnWJj ,> ,1 ,) ,or ,( :data #eGrPwMhwpnCRCtFlV2VMnWJj ,= ,0 ,)",
                "thenBody": [
                  {
                    "expr": "$VteExhK8V2zN74en6gVkaIN9P0 ,:= $VteExhK8V2zN74en6gVkaIN9P0 ,∥ 's",
                    "nodeType": "exprStmt",
                    "id": "tUnISlm0MSHYMeki3ZMX3RDv",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "xr2bJY7Hjmia2E45EkFRFVKe",
                "locals": []
              }
            ],
            "id": "VteExhK8V2zN74en6gVkaIN9"
          },
          {
            "name": "start",
            "comment": "Start time of test run.\n",
            "type": "DateTime",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "CTiRCbiBsEnydZaJFaLmbBxB"
          },
          {
            "name": "end",
            "comment": "Finish time of test run.\n",
            "type": "DateTime",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "x6pfTeH2tyCsbpQrsHM5k5ug"
          },
          {
            "name": "reset stopwatch",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":data #CTiRCbiBsEnydZaJFaLmbBxB ,:= :invalid .datetime",
                "nodeType": "exprStmt",
                "id": "YLVcSqsfL3z6yJByHkpHNXSf",
                "locals": []
              },
              {
                "expr": ":data #x6pfTeH2tyCsbpQrsHM5k5ug ,:= :data #CTiRCbiBsEnydZaJFaLmbBxB",
                "nodeType": "exprStmt",
                "id": "FEiElXD8v72cq0VRHVhsuTEi",
                "locals": []
              }
            ],
            "id": "uPqTYDu2htWlhaCU44qQHoSC"
          },
          {
            "name": "passed",
            "comment": "Assertions passed.\n",
            "type": "Number",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "uTQ2cvyB66Bddzr23tMqekvE"
          },
          {
            "name": "failed",
            "comment": "Assertions failed.\n",
            "type": "Number",
            "isReadonly": false,
            "isTransient": false,
            "nodeType": "data",
            "id": "DJjUpkP4olY29AMHBZlyHtYr"
          },
          {
            "name": "no faults",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":data #uTQ2cvyB66Bddzr23tMqekvE ,:= ,0",
                "nodeType": "exprStmt",
                "id": "KQJQdeNE2HFmmN4E5Qx6n7cF",
                "locals": []
              },
              {
                "expr": ":data #DJjUpkP4olY29AMHBZlyHtYr ,:= ,0",
                "nodeType": "exprStmt",
                "id": "vNjkNkhaXI7ni4ZyHm2woeJ8",
                "locals": []
              }
            ],
            "id": "Owv6FueE94Dnv2CwAR2nEaJQ"
          },
          {
            "name": "report faults",
            "inParameters": [],
            "outParameters": [
              {
                "name": "result",
                "type": "String",
                "nodeType": "localDef",
                "id": "UtOPSR2whn2RRA9NWGBxD2cBP0"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$UtOPSR2whn2RRA9NWGBxD2cBP0 ,:= :data #uTQ2cvyB66Bddzr23tMqekvE .to_string ,∥ '_pass",
                "nodeType": "exprStmt",
                "id": "JYgAqTRfgFzr95gkwmry27kU",
                "locals": []
              },
              {
                "nodeType": "if",
                "condition": ",( :data #uTQ2cvyB66Bddzr23tMqekvE ,> ,1 ,) ,or ,( :data #uTQ2cvyB66Bddzr23tMqekvE ,= ,0 ,)",
                "thenBody": [
                  {
                    "expr": "$UtOPSR2whn2RRA9NWGBxD2cBP0 ,:= $UtOPSR2whn2RRA9NWGBxD2cBP0 ,∥ 'es/002c_",
                    "nodeType": "exprStmt",
                    "id": "RnodLSm2SfPc2VWxRWvdfIfP",
                    "locals": []
                  }
                ],
                "elseBody": [
                  {
                    "expr": "$UtOPSR2whn2RRA9NWGBxD2cBP0 ,:= $UtOPSR2whn2RRA9NWGBxD2cBP0 ,∥ '/002c_",
                    "nodeType": "exprStmt",
                    "id": "xQb0MTAanTdSfCi2ISwU2CA7",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "CY8g008cD6TJp4GUBjKJSlgV",
                "locals": []
              },
              {
                "expr": "$UtOPSR2whn2RRA9NWGBxD2cBP0 ,:= $UtOPSR2whn2RRA9NWGBxD2cBP0 ,∥ :data #DJjUpkP4olY29AMHBZlyHtYr .to_string ,∥ '_failure",
                "nodeType": "exprStmt",
                "id": "V1Er2WZsE1RndfJe9FOFlMlF",
                "locals": []
              },
              {
                "nodeType": "if",
                "condition": ",( :data #DJjUpkP4olY29AMHBZlyHtYr ,> ,1 ,) ,or ,( :data #DJjUpkP4olY29AMHBZlyHtYr ,= ,0 ,)",
                "thenBody": [
                  {
                    "expr": "$UtOPSR2whn2RRA9NWGBxD2cBP0 ,:= $UtOPSR2whn2RRA9NWGBxD2cBP0 ,∥ 's",
                    "nodeType": "exprStmt",
                    "id": "wgcervf1VExzJFN10zGvliw3",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "cAFIq1VSxXfSVEO1dcNtJXg3",
                "locals": []
              }
            ],
            "id": "UtOPSR2whn2RRA9NWGBxD2cB"
          },
          {
            "name": "start stopwatch",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":data #CTiRCbiBsEnydZaJFaLmbBxB ,:= :time .now",
                "nodeType": "exprStmt",
                "id": "yZ9E0DGlOXb4KJdnITLgH25b",
                "locals": []
              }
            ],
            "id": "waNI5VCinw1nLydfCCpNlY12"
          },
          {
            "name": "stop stopwatch",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":data #x6pfTeH2tyCsbpQrsHM5k5ug ,:= :time .now",
                "nodeType": "exprStmt",
                "id": "L7zuP2TRg8RcB5eOalU3Ng7t",
                "locals": []
              }
            ],
            "id": "B26iiRVJM009S7oL4ly7dhBJ"
          },
          {
            "name": "report time",
            "inParameters": [],
            "outParameters": [
              {
                "name": "result",
                "type": "String",
                "nodeType": "localDef",
                "id": "x5Hlee8UxuOp4WGsAWP19x74P0"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$V4MsU9h8zhXpwJKQnJSJlCn5L0 ,:= :data #x6pfTeH2tyCsbpQrsHM5k5ug .subtract ,( :data #CTiRCbiBsEnydZaJFaLmbBxB ,)",
                "nodeType": "exprStmt",
                "id": "V4MsU9h8zhXpwJKQnJSJlCn5",
                "locals": [
                  {
                    "name": "delta s",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "V4MsU9h8zhXpwJKQnJSJlCn5L0"
                  }
                ]
              },
              {
                "nodeType": "if",
                "condition": "$V4MsU9h8zhXpwJKQnJSJlCn5L0 ,≥ ,1",
                "thenBody": [
                  {
                    "expr": "$x5Hlee8UxuOp4WGsAWP19x74P0 ,:= $V4MsU9h8zhXpwJKQnJSJlCn5L0 .to_string ,∥ 's",
                    "nodeType": "exprStmt",
                    "id": "Lj2LMugEfR4DIsJBZLytMkJb",
                    "locals": []
                  }
                ],
                "elseBody": [
                  {
                    "expr": "$x5Hlee8UxuOp4WGsAWP19x74P0 ,:= :math .round ,( $V4MsU9h8zhXpwJKQnJSJlCn5L0 ,* ,1 ,0 ,0 ,0 ,) .to_string ,∥ 'ms",
                    "nodeType": "exprStmt",
                    "id": "RhQ0XBSxb7dMSMas7bu3lPdU",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "h2WdGwaOs9RO7J4P9uOmny8b",
                "locals": []
              }
            ],
            "id": "x5Hlee8UxuOp4WGsAWP19x74"
          },
          {
            "name": "count faults",
            "inParameters": [
              {
                "name": "test passed",
                "type": "Boolean",
                "nodeType": "localDef",
                "id": "w1S0Y9ArNj6f2bhnVeOeOE3uP0"
              }
            ],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "nodeType": "if",
                "condition": "$w1S0Y9ArNj6f2bhnVeOeOE3uP0",
                "thenBody": [
                  {
                    "expr": ":data #uTQ2cvyB66Bddzr23tMqekvE ,:= :data #uTQ2cvyB66Bddzr23tMqekvE ,+ ,1",
                    "nodeType": "exprStmt",
                    "id": "je4fqFs0M5iE5kLP2lr6H0V2",
                    "locals": []
                  }
                ],
                "elseBody": [
                  {
                    "expr": ":data #DJjUpkP4olY29AMHBZlyHtYr ,:= :data #DJjUpkP4olY29AMHBZlyHtYr ,+ ,1",
                    "nodeType": "exprStmt",
                    "id": "xL4Yb3uoLbD4g4o4GJVTb4eY",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "hXhZl8VM2D49L9IbRual58Ib",
                "locals": []
              }
            ],
            "id": "w1S0Y9ArNj6f2bhnVeOeOE3u"
          },
          {
            "name": "assert",
            "inParameters": [
              {
                "name": "test result",
                "type": "Boolean",
                "nodeType": "localDef",
                "id": "LmOaFuJ2JxyFA7e5eVBJr0efP0"
              },
              {
                "name": "message",
                "type": "String",
                "nodeType": "localDef",
                "id": "LmOaFuJ2JxyFA7e5eVBJr0efP1"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check test result & print message on failure.",
                "nodeType": "comment",
                "id": "N58F1XM12E7luMfBoJriOS9X"
              },
              {
                "expr": ":code #w1S0Y9ArNj6f2bhnVeOeOE3u ,( $LmOaFuJ2JxyFA7e5eVBJr0efP0 ,)",
                "nodeType": "exprStmt",
                "id": "uwiQhtQZfh4pltkDnSJY5cEP",
                "locals": []
              },
              {
                "nodeType": "if",
                "condition": ",not $LmOaFuJ2JxyFA7e5eVBJr0efP0",
                "thenBody": [
                  {
                    "expr": "$xedqKPB7AIukXn4ImH9P5T0CL0 ,:= 'Failure_in/003a_/0027 ,∥ :code #D4q6KWfp4GTsglhqRcHbcwVx ,( ,) ,∥ '/0027_/002d_ ,∥ $LmOaFuJ2JxyFA7e5eVBJr0efP1",
                    "nodeType": "exprStmt",
                    "id": "xedqKPB7AIukXn4ImH9P5T0C",
                    "locals": [
                      {
                        "name": "failure",
                        "type": "String",
                        "nodeType": "localDef",
                        "id": "xedqKPB7AIukXn4ImH9P5T0CL0"
                      }
                    ]
                  },
                  {
                    "expr": "$IoDoVVw6afTrJuRiyOFQAqiPL0 ,:= :wall .create_text_box ,( $xedqKPB7AIukXn4ImH9P5T0CL0 ,, ,2 ,2 ,)",
                    "nodeType": "exprStmt",
                    "id": "IoDoVVw6afTrJuRiyOFQAqiP",
                    "locals": [
                      {
                        "name": "box1",
                        "type": "TextBox",
                        "nodeType": "localDef",
                        "id": "IoDoVVw6afTrJuRiyOFQAqiPL0"
                      }
                    ]
                  },
                  {
                    "expr": "$IoDoVVw6afTrJuRiyOFQAqiPL0 .set_foreground ,( :colors .red ,)",
                    "nodeType": "exprStmt",
                    "id": "xqjKtdihM95flVhB4UWEQYK2",
                    "locals": []
                  },
                  {
                    "expr": "$IoDoVVw6afTrJuRiyOFQAqiPL0 .post_to_wall",
                    "nodeType": "exprStmt",
                    "id": "DON68E3Tk2VeIcU0s8kcG4Bo",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "Rn1Iau2A54lX2TycoCppkGBp",
                "locals": []
              }
            ],
            "id": "LmOaFuJ2JxyFA7e5eVBJr0ef"
          },
          {
            "name": "assert =Integers",
            "inParameters": [
              {
                "name": "expected",
                "type": "Number",
                "nodeType": "localDef",
                "id": "g25ph20H5INaW3tLrj7KWH1LP0"
              },
              {
                "name": "actual",
                "type": "Number",
                "nodeType": "localDef",
                "id": "g25ph20H5INaW3tLrj7KWH1LP1"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check if expected number equals actual.",
                "nodeType": "comment",
                "id": "CSgpkp9W03IquHU7DxJFklbX"
              },
              {
                "expr": ":code #LmOaFuJ2JxyFA7e5eVBJr0ef ,( $g25ph20H5INaW3tLrj7KWH1LP0 ,= $g25ph20H5INaW3tLrj7KWH1LP1 ,, 'expected/003a_ ,∥ $g25ph20H5INaW3tLrj7KWH1LP0 ,∥ '/002c_ ,∥ 'actual/003a_ ,∥ $g25ph20H5INaW3tLrj7KWH1LP1 ,)",
                "nodeType": "exprStmt",
                "id": "a8pFqOiz4e6sEzmzgZh7udu4",
                "locals": []
              }
            ],
            "id": "g25ph20H5INaW3tLrj7KWH1L"
          },
          {
            "name": "assert =Strings",
            "inParameters": [
              {
                "name": "expected",
                "type": "String",
                "nodeType": "localDef",
                "id": "xK2zwSDsg55Pjq0BJoqDFgDDP0"
              },
              {
                "name": "actual",
                "type": "String",
                "nodeType": "localDef",
                "id": "xK2zwSDsg55Pjq0BJoqDFgDDP1"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check if expected string equals actual.",
                "nodeType": "comment",
                "id": "wUiXTcayHV0MhmHeBC1JC4T1"
              },
              {
                "expr": ":code #LmOaFuJ2JxyFA7e5eVBJr0ef ,( $xK2zwSDsg55Pjq0BJoqDFgDDP0 .equals ,( $xK2zwSDsg55Pjq0BJoqDFgDDP1 ,) ,, 'expected/003a_/0022 ,∥ $xK2zwSDsg55Pjq0BJoqDFgDDP0 ,∥ '/0022/002c_ ,∥ 'actual/003a_/0022 ,∥ $xK2zwSDsg55Pjq0BJoqDFgDDP1 ,∥ '/0022 ,)",
                "nodeType": "exprStmt",
                "id": "xcnueOiM6Fir8A2fH9dwfe5j",
                "locals": []
              }
            ],
            "id": "xK2zwSDsg55Pjq0BJoqDFgDD"
          },
          {
            "name": "assert =DateTimes",
            "inParameters": [
              {
                "name": "expected",
                "type": "DateTime",
                "nodeType": "localDef",
                "id": "x5t1MYv2ob7oTkmQmJeRKAj5P0"
              },
              {
                "name": "actual",
                "type": "DateTime",
                "nodeType": "localDef",
                "id": "x5t1MYv2ob7oTkmQmJeRKAj5P1"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check if expected date/time equals actual.",
                "nodeType": "comment",
                "id": "ipI4iDRZiwcSfAX1r4V52Kyu"
              },
              {
                "expr": ":code #LmOaFuJ2JxyFA7e5eVBJr0ef ,( $x5t1MYv2ob7oTkmQmJeRKAj5P0 .equals ,( $x5t1MYv2ob7oTkmQmJeRKAj5P1 ,) ,, 'expected/003a_ ,∥ $x5t1MYv2ob7oTkmQmJeRKAj5P0 ,∥ '/002c_ ,∥ 'actual/003a_ ,∥ $x5t1MYv2ob7oTkmQmJeRKAj5P1 ,)",
                "nodeType": "exprStmt",
                "id": "utyXkD3z0Xcfj5lH0M1X4TqD",
                "locals": []
              }
            ],
            "id": "x5t1MYv2ob7oTkmQmJeRKAj5"
          },
          {
            "name": "example main",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Run this to see what tdUnit does.",
                "nodeType": "comment",
                "id": "GLU0MycYdaWE5wUD0YZDBmbb"
              },
              {
                "text": "# Description",
                "nodeType": "comment",
                "id": "E8OIsAZ2g5gSdGSOf7JaXe3V"
              },
              {
                "text": "tdUnit is a prototype unit test framework (like jUnit).",
                "nodeType": "comment",
                "id": "tsgU2h466nJpBsmUBHwRPwqg"
              },
              {
                "text": "## Usage",
                "nodeType": "comment",
                "id": "daNArC6Yj6KYGbAo2E2tBbKg"
              },
              {
                "text": "BREAKING CHANGE: initialize is no longer needed.",
                "nodeType": "comment",
                "id": "x6GKdHTi0WpWu217f2U0qfU3"
              },
              {
                "text": "BREAKING GHANGE: assert interface has changed.",
                "nodeType": "comment",
                "id": "xhz11KT2wixgcYNYd6gJJfJR"
              },
              {
                "text": "Add the library to your script. Add an action that does the following (remembering that you will be calling a library):",
                "nodeType": "comment",
                "id": "eETV16FQfVg4tYVFheTuckLi"
              },
              {
                "expr": ":code #Fr3KrHo0CDCTE0Nj85WLY2Z2",
                "nodeType": "exprStmt",
                "id": "CObRXf7rAVHj2rEHQIDbVIbm",
                "locals": []
              },
              {
                "expr": ":code #x1W3Fk443q1KVZKnRsh1bt42",
                "nodeType": "exprStmt",
                "id": "v2f8mEf41iZDp2jefR2cDx9I",
                "locals": []
              },
              {
                "expr": ":code #JVReBfJgGlCRkswqaZh5hxAe",
                "nodeType": "exprStmt",
                "id": "pd53wYwxgyWBLQInQRcWTem6",
                "locals": []
              },
              {
                "text": "In the action ``actions under test``, list the actions which exercise your code. The test actions should be defined like this:",
                "nodeType": "comment",
                "id": "xUyVjTu2dnTW1bL3sroC7mb6"
              },
              {
                "text": "``test example()``",
                "nodeType": "comment",
                "id": "xUDd1oxHyDUBAYv2vGylsFzF"
              },
              {
                "text": "``tdUnit->run test(\"example\")``",
                "nodeType": "comment",
                "id": "ezdpwx0UuoC0dshpOEUQs86g"
              },
              {
                "text": "// exercise your code here",
                "nodeType": "comment",
                "id": "xseOZKSe1RN4jvBp44LuKeiU"
              },
              {
                "text": "``tdUnit->assert =Integers(3, an integer)``",
                "nodeType": "comment",
                "id": "H3It27h9zReDptLELSbh1ksO"
              },
              {
                "text": "## Comments",
                "nodeType": "comment",
                "id": "x6c4V3DmxJXtzcpNIue7qVyT"
              },
              {
                "text": "I hope the code is easy to understand and extend. Let me know if you add anything useful.",
                "nodeType": "comment",
                "id": "xPCNGMYIwhWl0U6S27an5A6g"
              }
            ],
            "id": "a7eyt4cwVmZx55VmNdAA8lYw"
          },
          {
            "name": "actions under test",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Example list of actions to test",
                "nodeType": "comment",
                "id": "xmHO3vRBrau89sfJrUJghjR2"
              },
              {
                "expr": ":code #S5o2WdOY8F1uJn4aJnjOQgOC",
                "nodeType": "exprStmt",
                "id": "ImUlmgVVOaH4k6KddXuLs0nS",
                "locals": []
              }
            ],
            "id": "x1W3Fk443q1KVZKnRsh1bt42"
          },
          {
            "name": "test example",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Example test action.",
                "nodeType": "comment",
                "id": "UxKx9Y3kmmHPJ2htQdvwtPNb"
              },
              {
                "expr": ":code #xpnLD4ZxxuT4alam0nXovRsK ,( 'example ,)",
                "nodeType": "exprStmt",
                "id": "Hp1LdRWd79Y4px9O2CZgKN3b",
                "locals": []
              },
              {
                "expr": ":code #g25ph20H5INaW3tLrj7KWH1L ,( ,1 ,, :code #xi1hCiNNiuitibh3bftduZhn ,( ,0 ,) ,)",
                "nodeType": "exprStmt",
                "id": "BaR2Zphjxc6reOKGlGQGo3On",
                "locals": []
              },
              {
                "expr": ":code #g25ph20H5INaW3tLrj7KWH1L ,( ,2 ,, :code #xi1hCiNNiuitibh3bftduZhn ,( ,1 ,) ,)",
                "nodeType": "exprStmt",
                "id": "blBEP77EnX6HxlSnwzFRe92L",
                "locals": []
              }
            ],
            "id": "S5o2WdOY8F1uJn4aJnjOQgOC"
          },
          {
            "name": "evaluate",
            "inParameters": [
              {
                "name": "x",
                "type": "Number",
                "nodeType": "localDef",
                "id": "xi1hCiNNiuitibh3bftduZhnP0"
              }
            ],
            "outParameters": [
              {
                "name": "y",
                "type": "Number",
                "nodeType": "localDef",
                "id": "xi1hCiNNiuitibh3bftduZhnP1"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Example function for testing.",
                "nodeType": "comment",
                "id": "TcsqTo4esrqNakhuIGs26RBT"
              },
              {
                "expr": "$xi1hCiNNiuitibh3bftduZhnP1 ,:= $xi1hCiNNiuitibh3bftduZhnP0 ,* ,2 ,+ ,1",
                "nodeType": "exprStmt",
                "id": "zslg9k1sEz5M0YkfPsUVuZOS",
                "locals": []
              }
            ],
            "id": "xi1hCiNNiuitibh3bftduZhn"
          },
          {
            "name": "assert =Floats",
            "inParameters": [
              {
                "name": "expected",
                "type": "Number",
                "nodeType": "localDef",
                "id": "TYS94ctxZuJLBJP524B5wfPxP0"
              },
              {
                "name": "actual",
                "type": "Number",
                "nodeType": "localDef",
                "id": "TYS94ctxZuJLBJP524B5wfPxP1"
              },
              {
                "name": "tolerance",
                "type": "Number",
                "nodeType": "localDef",
                "id": "TYS94ctxZuJLBJP524B5wfPxP2"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check if expected float equals actual within tolerance.",
                "nodeType": "comment",
                "id": "N2qBJMtXyQxKjL3jGYwiyL4k"
              },
              {
                "expr": "$zBo0RJhccqduRwatvod4Ic0TL0 ,:= $TYS94ctxZuJLBJP524B5wfPxP0 ,+ $TYS94ctxZuJLBJP524B5wfPxP2",
                "nodeType": "exprStmt",
                "id": "zBo0RJhccqduRwatvod4Ic0T",
                "locals": [
                  {
                    "name": "max",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "zBo0RJhccqduRwatvod4Ic0TL0"
                  }
                ]
              },
              {
                "expr": "$u2btKGmYixAgAh45FbpKGMRUL0 ,:= $TYS94ctxZuJLBJP524B5wfPxP0 ,- $TYS94ctxZuJLBJP524B5wfPxP2",
                "nodeType": "exprStmt",
                "id": "u2btKGmYixAgAh45FbpKGMRU",
                "locals": [
                  {
                    "name": "min",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "u2btKGmYixAgAh45FbpKGMRUL0"
                  }
                ]
              },
              {
                "expr": ":code #LmOaFuJ2JxyFA7e5eVBJr0ef ,( ,( $zBo0RJhccqduRwatvod4Ic0TL0 ,> $TYS94ctxZuJLBJP524B5wfPxP1 ,) ,and ,( $TYS94ctxZuJLBJP524B5wfPxP1 ,> $u2btKGmYixAgAh45FbpKGMRUL0 ,) ,, 'expected/003a_ ,∥ $TYS94ctxZuJLBJP524B5wfPxP0 ,∥ '/002c_ ,∥ 'actual/003a_ ,∥ $TYS94ctxZuJLBJP524B5wfPxP1 ,)",
                "nodeType": "exprStmt",
                "id": "x3H7XWbTw9Pg5Ltjc7xbk5eB",
                "locals": []
              }
            ],
            "id": "TYS94ctxZuJLBJP524B5wfPx"
          },
          {
            "name": "assert ~=Strings",
            "inParameters": [
              {
                "name": "expected",
                "type": "String",
                "nodeType": "localDef",
                "id": "xiUC5vN0QtbUV7DccVGqEBDzP0"
              },
              {
                "name": "actual",
                "type": "String",
                "nodeType": "localDef",
                "id": "xiUC5vN0QtbUV7DccVGqEBDzP1"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Check if expected string equals actual, ignoring case and whitespace.",
                "nodeType": "comment",
                "id": "VWfn8DNMArsbnUnGXFkJ4eCO"
              },
              {
                "expr": "$DHp9VmaQrL32G1pSHwDeIqoeL0 ,:= $xiUC5vN0QtbUV7DccVGqEBDzP1 .to_upper_case .trim ,( '_/0009_/000a .trim ,( '_/0009 ,) ,)",
                "nodeType": "exprStmt",
                "id": "DHp9VmaQrL32G1pSHwDeIqoe",
                "locals": [
                  {
                    "name": "revised actual",
                    "type": "String",
                    "nodeType": "localDef",
                    "id": "DHp9VmaQrL32G1pSHwDeIqoeL0"
                  }
                ]
              },
              {
                "expr": ":code #LmOaFuJ2JxyFA7e5eVBJr0ef ,( $xiUC5vN0QtbUV7DccVGqEBDzP0 .equals ,( $DHp9VmaQrL32G1pSHwDeIqoeL0 ,) ,, 'expected/003a_/0022 ,∥ $xiUC5vN0QtbUV7DccVGqEBDzP0 ,∥ '/0022/002c_ ,∥ 'actual/003a_/0022 ,∥ $xiUC5vN0QtbUV7DccVGqEBDzP1 ,∥ '/0022 ,)",
                "nodeType": "exprStmt",
                "id": "LaRVU845tUwsKTizgxqQbhrH",
                "locals": []
              }
            ],
            "id": "xiUC5vN0QtbUV7DccVGqEBDz"
          }
        ],
        "deletedDecls": [],
        "nodeType": "app",
        "id": "app"
      }
    }
  ]
}