{
  "userid": "pboj",
  "guid": "1fc51646-7925-4a70-bf93-f0b9eeb0da60",
  "lastStatus": "deleted",
  "items": [
    {
      "seqNo": 0,
      "time": 1361017257,
      "scriptId": "mabk",
      "historyId": "25204128354259178571fc51646-7925-4a70-bf93-f0b9eeb0da60",
      "updateSize": 7637,
      "ast": {
        "textVersion": "v2.2,js,ctx",
        "jsonVersion": "v1.0,resolved,short",
        "name": "Prime Sieve of Eratosthenes",
        "comment": "This prime finding algorithm is based on Eratosthenes'. In short, it marks as not prime every number that is a multiple of smaller primes.\n\n· It is exponentially faster than the often-used “divide all numbers by all others” algorithm.\n· It still is extremely simple and lightweight.\n· It exists since 195BC and has always worked :).\n\n___________\nAbout the update:\n· I've managed to cut down calculation time by 1/6.\n___________\nMore info:\n· No safeguards are built in (i.e. no type control, no value checking) so you need to make sure yourself no illegal value gets passed to the algorithm: only integers ≥2 are okay. Depending on your platform, TouchDevelop will or will not affect the value you pass, so anything not fulfilling the above will give undefined (unexpected / unintended) results.\n· The choice for leaving out any user interaction comes from the fact that every developer wants to implement this differently.\n· I have successfully tested the generation up to 2,500,000, but such high values (up from 1,000,000 resulting in ~80,000 primes) seem to bug out TouchDevelop when saved to a global variable (don't quote me on that though).",
        "icon": "123",
        "color": "#ff007fff",
        "autoIcon": "123",
        "autoColor": "#007fff",
        "platform": "current",
        "rootId": "Z10KVZMAmg0pjqiaFlDBJ6ac",
        "showAd": false,
        "isLibrary": true,
        "allowExport": false,
        "hasUniqueIds": false,
        "decls": [
          {
            "name": "generate primes verbose",
            "inParameters": [
              {
                "name": "up to",
                "type": "Number",
                "nodeType": "localDef",
                "id": "iFVhyxzSINETEVJ55xmSus3NP0"
              }
            ],
            "outParameters": [
              {
                "name": "primes",
                "type": "Number Collection",
                "nodeType": "localDef",
                "id": "iFVhyxzSINETEVJ55xmSus3NP1"
              }
            ],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Prime generation launching API function enabling the display of the actual progress of the generation",
                "nodeType": "comment",
                "id": "xUPFDDW2tEnvuuqqc3BFNCuW"
              },
              {
                "expr": "$DjekpGsa2YGKo4oRn2LixHdPL0 ,:= :code #N2te4Uidnkjtd38iwDINxbQU ,( $iFVhyxzSINETEVJ55xmSus3NP0 ,)",
                "nodeType": "exprStmt",
                "id": "DjekpGsa2YGKo4oRn2LixHdP",
                "locals": [
                  {
                    "name": "n",
                    "type": "Number Map",
                    "nodeType": "localDef",
                    "id": "DjekpGsa2YGKo4oRn2LixHdPL0"
                  }
                ]
              },
              {
                "expr": ":code #BTFu1K2p87M0mrqEHar4Ibjw ,( ,1 ,)",
                "nodeType": "exprStmt",
                "id": "xXvT68CKd9z43vAE843g01z4",
                "locals": []
              },
              {
                "expr": "$iFVhyxzSINETEVJ55xmSus3NP1 ,:= :code #Dvae3J0sQx7DAKm9eCa1DZCT ,( $iFVhyxzSINETEVJ55xmSus3NP0 ,, $DjekpGsa2YGKo4oRn2LixHdPL0 ,)",
                "nodeType": "exprStmt",
                "id": "gnrJ91q4324HV6LqgX12dflZ",
                "locals": []
              },
              {
                "expr": ":code #BTFu1K2p87M0mrqEHar4Ibjw ,( ,2 ,)",
                "nodeType": "exprStmt",
                "id": "MjKnm0sklosHtAlCkCPG4y3O",
                "locals": []
              }
            ],
            "id": "iFVhyxzSINETEVJ55xmSus3N"
          },
          {
            "name": "generate primes",
            "inParameters": [
              {
                "name": "up to",
                "type": "Number",
                "nodeType": "localDef",
                "id": "XPWR6ES5iSuirtGOxb1yFsu2P0"
              }
            ],
            "outParameters": [
              {
                "name": "primes",
                "type": "Number Collection",
                "nodeType": "localDef",
                "id": "XPWR6ES5iSuirtGOxb1yFsu2P1"
              }
            ],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Prime generation launching API function",
                "nodeType": "comment",
                "id": "JvARM25IQDUpheam9jKB94YI"
              },
              {
                "expr": "$XPWR6ES5iSuirtGOxb1yFsu2P1 ,:= :code #Dvae3J0sQx7DAKm9eCa1DZCT ,( $XPWR6ES5iSuirtGOxb1yFsu2P0 ,, :code #N2te4Uidnkjtd38iwDINxbQU ,( $XPWR6ES5iSuirtGOxb1yFsu2P0 ,) ,)",
                "nodeType": "exprStmt",
                "id": "PvjSROjb4KMLUdRFihz0yO8P",
                "locals": []
              }
            ],
            "id": "XPWR6ES5iSuirtGOxb1yFsu2"
          },
          {
            "name": "gen.step1",
            "inParameters": [
              {
                "name": "g",
                "type": "Number",
                "nodeType": "localDef",
                "id": "N2te4Uidnkjtd38iwDINxbQUP0"
              }
            ],
            "outParameters": [
              {
                "name": "n",
                "type": "Number Map",
                "nodeType": "localDef",
                "id": "N2te4Uidnkjtd38iwDINxbQUP1"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$h7HfailxACk7OsR8ptlDZx4RL0 ,:= ,2",
                "nodeType": "exprStmt",
                "id": "h7HfailxACk7OsR8ptlDZx4R",
                "locals": [
                  {
                    "name": "i",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "h7HfailxACk7OsR8ptlDZx4RL0"
                  }
                ]
              },
              {
                "expr": "$N2te4Uidnkjtd38iwDINxbQUP1 ,:= :collections .create_number_map",
                "nodeType": "exprStmt",
                "id": "F7CiLYVsqlU2HbQhzpZAHMvK",
                "locals": []
              },
              {
                "condition": "$h7HfailxACk7OsR8ptlDZx4RL0 ,≤ :math .sqrt ,( $N2te4Uidnkjtd38iwDINxbQUP0 ,)",
                "body": [
                  {
                    "nodeType": "if",
                    "condition": "$N2te4Uidnkjtd38iwDINxbQUP1 .at ,( $h7HfailxACk7OsR8ptlDZx4RL0 ,) ,= ,0",
                    "thenBody": [
                      {
                        "expr": "$MnON791nxYnYgDT5xHYve9xLL0 ,:= ,0",
                        "nodeType": "exprStmt",
                        "id": "MnON791nxYnYgDT5xHYve9xL",
                        "locals": [
                          {
                            "name": "j",
                            "type": "Number",
                            "nodeType": "localDef",
                            "id": "MnON791nxYnYgDT5xHYve9xLL0"
                          }
                        ]
                      },
                      {
                        "expr": "$XfwtPp2nYhUA8BCTlaoCZuR1L0 ,:= ,0",
                        "nodeType": "exprStmt",
                        "id": "XfwtPp2nYhUA8BCTlaoCZuR1",
                        "locals": [
                          {
                            "name": "k",
                            "type": "Number",
                            "nodeType": "localDef",
                            "id": "XfwtPp2nYhUA8BCTlaoCZuR1L0"
                          }
                        ]
                      },
                      {
                        "condition": "$MnON791nxYnYgDT5xHYve9xLL0 ,≤ $N2te4Uidnkjtd38iwDINxbQUP0",
                        "body": [
                          {
                            "expr": "$MnON791nxYnYgDT5xHYve9xLL0 ,:= $h7HfailxACk7OsR8ptlDZx4RL0 ,* $h7HfailxACk7OsR8ptlDZx4RL0 ,+ $XfwtPp2nYhUA8BCTlaoCZuR1L0 ,* $h7HfailxACk7OsR8ptlDZx4RL0",
                            "nodeType": "exprStmt",
                            "id": "aoaLFjLZ73TMxfuyGl8Svahc",
                            "locals": []
                          },
                          {
                            "expr": "$N2te4Uidnkjtd38iwDINxbQUP1 .set_at ,( $MnON791nxYnYgDT5xHYve9xLL0 ,, ,1 ,)",
                            "nodeType": "exprStmt",
                            "id": "c9yFyggsj5kLO2IxhhFZtn2r",
                            "locals": []
                          },
                          {
                            "expr": "$XfwtPp2nYhUA8BCTlaoCZuR1L0 ,:= $XfwtPp2nYhUA8BCTlaoCZuR1L0 ,+ ,1",
                            "nodeType": "exprStmt",
                            "id": "P0RTDzN7afcy4Ietp4ubJjzB",
                            "locals": []
                          }
                        ],
                        "nodeType": "while",
                        "id": "duFKG2V2Yi50j4NXil75xW7v",
                        "locals": []
                      }
                    ],
                    "isElseIf": false,
                    "id": "mIx7GoVjL1yIh60tniugOzNO",
                    "locals": []
                  },
                  {
                    "expr": "$h7HfailxACk7OsR8ptlDZx4RL0 ,:= $h7HfailxACk7OsR8ptlDZx4RL0 ,+ ,1",
                    "nodeType": "exprStmt",
                    "id": "ByZgn8LZw4ycJUY7hO2R0l2G",
                    "locals": []
                  }
                ],
                "nodeType": "while",
                "id": "kgRWxm2LSHcUxYELwHjkYi2T",
                "locals": []
              }
            ],
            "id": "N2te4Uidnkjtd38iwDINxbQU"
          },
          {
            "name": "gen.step2",
            "inParameters": [
              {
                "name": "g",
                "type": "Number",
                "nodeType": "localDef",
                "id": "Dvae3J0sQx7DAKm9eCa1DZCTP0"
              },
              {
                "name": "n",
                "type": "Number Map",
                "nodeType": "localDef",
                "id": "Dvae3J0sQx7DAKm9eCa1DZCTP1"
              }
            ],
            "outParameters": [
              {
                "name": "p",
                "type": "Number Collection",
                "nodeType": "localDef",
                "id": "Dvae3J0sQx7DAKm9eCa1DZCTP2"
              }
            ],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": "$SlpyT0wOAqLbdv8MADE96RQbL0 ,:= ,2",
                "nodeType": "exprStmt",
                "id": "SlpyT0wOAqLbdv8MADE96RQb",
                "locals": [
                  {
                    "name": "i",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "SlpyT0wOAqLbdv8MADE96RQbL0"
                  }
                ]
              },
              {
                "expr": "$Dvae3J0sQx7DAKm9eCa1DZCTP2 ,:= :collections .create_number_collection",
                "nodeType": "exprStmt",
                "id": "xOJlltGjEKLOqLYbr4nEKmRk",
                "locals": []
              },
              {
                "condition": "$SlpyT0wOAqLbdv8MADE96RQbL0 ,≤ $Dvae3J0sQx7DAKm9eCa1DZCTP0",
                "body": [
                  {
                    "nodeType": "if",
                    "condition": "$Dvae3J0sQx7DAKm9eCa1DZCTP1 .at ,( $SlpyT0wOAqLbdv8MADE96RQbL0 ,) ,= ,0",
                    "thenBody": [
                      {
                        "expr": "$Dvae3J0sQx7DAKm9eCa1DZCTP2 .add ,( $SlpyT0wOAqLbdv8MADE96RQbL0 ,)",
                        "nodeType": "exprStmt",
                        "id": "xKqtnpZw2MkByOowbH2XKNzf",
                        "locals": []
                      }
                    ],
                    "isElseIf": false,
                    "id": "HeCaqxz2jj2Wl21MW2bj84zj",
                    "locals": []
                  },
                  {
                    "expr": "$SlpyT0wOAqLbdv8MADE96RQbL0 ,:= $SlpyT0wOAqLbdv8MADE96RQbL0 ,+ ,1",
                    "nodeType": "exprStmt",
                    "id": "xY1eWWbDXo81APg0Tmyhna4T",
                    "locals": []
                  }
                ],
                "nodeType": "while",
                "id": "xcq8fRyC3ZjChdSBnQArHTOb",
                "locals": []
              }
            ],
            "id": "Dvae3J0sQx7DAKm9eCa1DZCT"
          },
          {
            "name": "verbose",
            "inParameters": [
              {
                "name": "s",
                "type": "Number",
                "nodeType": "localDef",
                "id": "BTFu1K2p87M0mrqEHar4IbjwP0"
              }
            ],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "expr": ":wall .create_text_box ,( 'Step_ ,∥ $BTFu1K2p87M0mrqEHar4IbjwP0 ,∥ '_of_2_done/002e ,, ,1 ,9 ,) .post_to_wall",
                "nodeType": "exprStmt",
                "id": "WFvGlylOMD5fnW3MDq2sJ6ba",
                "locals": []
              }
            ],
            "id": "BTFu1K2p87M0mrqEHar4Ibjw"
          }
        ],
        "deletedDecls": [],
        "nodeType": "app",
        "id": "app"
      }
    }
  ]
}