{
  "userid": "gxfb",
  "guid": "90f40072-db3e-464a-97d6-7c586857dc4d",
  "lastStatus": "deleted",
  "items": [
    {
      "seqNo": 0,
      "time": 1366333275,
      "scriptId": "pctx",
      "historyId": "252035967524954005090f40072-db3e-464a-97d6-7c586857dc4d",
      "updateSize": 2639,
      "ast": {
        "textVersion": "v2.2,js,ctx",
        "jsonVersion": "v1.0,resolved,short",
        "name": "while",
        "comment": "Repeat code while a condition remains true. #docs #while #language",
        "icon": "Cycle",
        "color": "#ffE25822",
        "autoIcon": "Cycle",
        "autoColor": "#E25822",
        "platform": "current",
        "rootId": "K3aotkcEWqixAhpA3bIxeOuo",
        "showAd": false,
        "isLibrary": false,
        "allowExport": false,
        "hasUniqueIds": false,
        "decls": [
          {
            "name": "main",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "**while** is a statement that executes a body of code in a loop until the `condition` is false.",
                "nodeType": "comment",
                "id": "xJJZcVEloUHOHcNFImtTmE3u"
              },
              {
                "text": "Because the `condition` is evaluated before entering the loop, the body may be executed zero or more times.",
                "nodeType": "comment",
                "id": "qAyXWJFWaqEEu4yAUxD7l2u1"
              },
              {
                "text": "{hide}",
                "nodeType": "comment",
                "id": "AuGqYN4z7VPa8kv27XOi4azF"
              },
              {
                "expr": "$z8RwZ9iUhwIDrcHKGodUDl1xL0 ,:= F",
                "nodeType": "exprStmt",
                "id": "z8RwZ9iUhwIDrcHKGodUDl1x",
                "locals": [
                  {
                    "name": "condition",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "z8RwZ9iUhwIDrcHKGodUDl1xL0"
                  }
                ]
              },
              {
                "text": "{/hide}",
                "nodeType": "comment",
                "id": "abdWqSlsbBIsWEGVz0xVrEPA"
              },
              {
                "condition": "$z8RwZ9iUhwIDrcHKGodUDl1xL0",
                "body": [
                  {
                    "expr": "",
                    "nodeType": "exprStmt",
                    "id": "i1oV6uDjQsiBh24gyBtH4HdE",
                    "locals": []
                  }
                ],
                "nodeType": "while",
                "id": "XJKAoeZLx3MXuaxCpisFsxg5",
                "locals": []
              },
              {
                "text": "### example: counting backwards",
                "nodeType": "comment",
                "id": "VipFiM4hBGc8iEYBv9jdDxcz"
              },
              {
                "text": "In this example, we simply count backwards from `10` to `0`. To implement such program, you start by declaring an [index](/var) before the `while` loop.",
                "nodeType": "comment",
                "id": "xuw2p6KzimoJFKc6Rka7P2AD"
              },
              {
                "expr": "$fMMecVjaA6yey5UySx2kzLs2L0 ,:= ,1 ,0",
                "nodeType": "exprStmt",
                "id": "fMMecVjaA6yey5UySx2kzLs2",
                "locals": [
                  {
                    "name": "index",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "fMMecVjaA6yey5UySx2kzLs2L0"
                  }
                ]
              },
              {
                "condition": "$fMMecVjaA6yey5UySx2kzLs2L0 ,â‰¥ ,0",
                "body": [
                  {
                    "expr": "$fMMecVjaA6yey5UySx2kzLs2L0 .post_to_wall",
                    "nodeType": "exprStmt",
                    "id": "AXPNvcdAEdFcSui5i4CaEMw2",
                    "locals": []
                  },
                  {
                    "text": "Since we want to enumerate positive numbers, the condition is simply that `index` should greater or equal to 0. Then, on each iteration we substract `1` to `index` so that eventually it gets to 0.",
                    "nodeType": "comment",
                    "id": "w8DqdopRL6q6ot8pIIyBIsUM"
                  },
                  {
                    "expr": "$fMMecVjaA6yey5UySx2kzLs2L0 ,:= $fMMecVjaA6yey5UySx2kzLs2L0 ,- ,1",
                    "nodeType": "exprStmt",
                    "id": "pp93328otEyLolaV324W7tP7",
                    "locals": []
                  }
                ],
                "nodeType": "while",
                "id": "RfPgEt2h2Z8v4Nj22WMH5Bif",
                "locals": []
              }
            ],
            "id": "xBqOgORWcQHILHJda3v2jlcb"
          }
        ],
        "deletedDecls": [],
        "nodeType": "app",
        "id": "app"
      }
    }
  ]
}