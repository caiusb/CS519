{
  "userid": "wonm",
  "guid": "0d66f495-4960-47bd-afea-0b5df1121c16",
  "lastStatus": "deleted",
  "items": [
    {
      "seqNo": 0,
      "time": 1365727394,
      "scriptId": null,
      "historyId": "2520365734053824059c70baf21-01e6-47d2-a442-48a95e30cef8",
      "updateSize": 8693,
      "ast": {
        "textVersion": "v2.2,js,ctx",
        "jsonVersion": "v1.0,resolved,short",
        "name": "cs unplugged binary numbers",
        "comment": "Companion exercises for CS Unplugged Binary Numbers. #docs #csUnplugged #tutorials",
        "icon": "Farm",
        "color": "#ffFF7518",
        "autoIcon": "Farm",
        "autoColor": "#FF7518",
        "platform": "current",
        "rootId": "a8pNo8FILVD2ihSXshbsGbf3",
        "showAd": false,
        "isLibrary": false,
        "allowExport": false,
        "hasUniqueIds": false,
        "decls": [
          {
            "name": "main",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Have you done [CS Unplugged Binary Numbers](http://csunplugged.com/binary-numbers) already? You'll need it to go through the exercises below.",
                "nodeType": "comment",
                "id": "zKsOsdaVW3opXp1GDL3lNVrR"
              },
              {
                "text": "## exercise 1: 4-bit binary to decimal",
                "nodeType": "comment",
                "id": "H4N2odx842F5yeKfdEzD9GEf"
              },
              {
                "text": "Imagine that you need to convert a 4-bit binary number into a decimal number, how would you do it? You need to go through each bit, convert it into decimal and accumulate it in the final result. Let's try to turn that into code.",
                "nodeType": "comment",
                "id": "xJajsCdZPJ5rXcF3fpPONVH2"
              },
              {
                "text": "The  binary number is given to you as a piece of [text](/String) and we use a little helper `binary reader` to convert it into bits. The `bits` variable is a sequence of 0 or 1.",
                "nodeType": "comment",
                "id": "xvEPax37YYyyS4V8zewjAGJy"
              },
              {
                "expr": "$zLSTe4vrUaK1cxjXDPZXb4t2L0 ,:= :/267b #k3iy7PrIX9wz3ylVy1J0F4kB #xwVWTrjaistaY603w31BtKVX ,( 'scrub0 ,)",
                "nodeType": "exprStmt",
                "id": "zLSTe4vrUaK1cxjXDPZXb4t2",
                "locals": [
                  {
                    "name": "bits",
                    "type": "Number Collection",
                    "nodeType": "localDef",
                    "id": "zLSTe4vrUaK1cxjXDPZXb4t2L0"
                  }
                ]
              },
              {
                "text": "We declare a number variable to hold the decimal result. We will read each bit and accumulate their decimal values into `decimal`.",
                "nodeType": "comment",
                "id": "SvzF61Puc49Q7Sv41r4a4JS2"
              },
              {
                "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 ,:= ,0",
                "nodeType": "exprStmt",
                "id": "IkdRUw4q2J4Q70sWKpGpywu8",
                "locals": [
                  {
                    "name": "decimal",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "IkdRUw4q2J4Q70sWKpGpywu8L0"
                  }
                ]
              },
              {
                "text": "Now we need to _read_ the bit in `bits` and sum them into `decimal` to achieve the conversion.",
                "nodeType": "comment",
                "id": "sEwzuJITxs3cV8W2mVqNP7Vw"
              },
              {
                "text": "### the first bit!",
                "nodeType": "comment",
                "id": "Gy5x2BW7Lt3y82el1n211lz1"
              },
              {
                "text": "You can read each bit in `bits` using the [at(...)](/NumberCollectionAt) action. Heads up: `at` expects an index that starts at 0!!!",
                "nodeType": "comment",
                "id": "N8l2j82ZVpMIA8Mcy3JnGhRi"
              },
              {
                "expr": "$MpS3SQzp4skiIpbcaQe0ni97L0 ,:= $zLSTe4vrUaK1cxjXDPZXb4t2L0 .at ,( ,0 ,)",
                "nodeType": "exprStmt",
                "id": "MpS3SQzp4skiIpbcaQe0ni97",
                "locals": [
                  {
                    "name": "bit",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "MpS3SQzp4skiIpbcaQe0ni97L0"
                  }
                ]
              },
              {
                "text": "Once you have bit, you can test whether it is equal to `1` using `=`. If the first bit is 1, we add `1` to `decimal`.",
                "nodeType": "comment",
                "id": "sMZf2Et2OExwq4fjPmHbBZU4"
              },
              {
                "nodeType": "if",
                "condition": "$MpS3SQzp4skiIpbcaQe0ni97L0 ,= ,1",
                "thenBody": [
                  {
                    "text": "Hey! This is a '1'!!!!",
                    "nodeType": "comment",
                    "id": "z88Pg8DkQ1zT3SqSYaO0ofUZ"
                  },
                  {
                    "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 ,:= $IkdRUw4q2J4Q70sWKpGpywu8L0 ,+ ,1",
                    "nodeType": "exprStmt",
                    "id": "MP0rJNVCMMqYZ60uc62BM6di",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "xsSy9wCqRGtsRrR85DbDzwQM",
                "locals": []
              },
              {
                "text": "Let's display the value of decimal on the screen. `post to wall` will print the value of `decimal` on the top of the screen.",
                "nodeType": "comment",
                "id": "QTBnxaCTBfjOPpVeIz24MC6k"
              },
              {
                "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 .post_to_wall",
                "nodeType": "exprStmt",
                "id": "EioYP8U2PsstNqzO97zkuvJo",
                "locals": []
              },
              {
                "text": "### the second bit",
                "nodeType": "comment",
                "id": "xZoWG5fy5VhJfhndhm2R4e2P"
              },
              {
                "text": "We grab the bit at position `1` (since we start indexing at `0`). If that bit is equal to `1`, we add 2 to `decimal`.",
                "nodeType": "comment",
                "id": "VVEQWvKayEuEdKwKrS9Vmwuo"
              },
              {
                "expr": "$pZgRrVXw6sxpWSfwqTp32AERL0 ,:= $zLSTe4vrUaK1cxjXDPZXb4t2L0 .at ,( ,1 ,)",
                "nodeType": "exprStmt",
                "id": "pZgRrVXw6sxpWSfwqTp32AER",
                "locals": [
                  {
                    "name": "second bit",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "pZgRrVXw6sxpWSfwqTp32AERL0"
                  }
                ]
              },
              {
                "nodeType": "if",
                "condition": "$pZgRrVXw6sxpWSfwqTp32AERL0 ,= ,1",
                "thenBody": [
                  {
                    "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 ,:= $IkdRUw4q2J4Q70sWKpGpywu8L0 ,+ ,2",
                    "nodeType": "exprStmt",
                    "id": "xsITbETyRT4LJzYK4FG4YYTT",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "CJ6hDtZk6nszVZ8yOqEwrGs2",
                "locals": []
              },
              {
                "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 .post_to_wall",
                "nodeType": "exprStmt",
                "id": "xnQybfxOfn2Nv8LH5DXgEj53",
                "locals": []
              },
              {
                "text": "### the third bit",
                "nodeType": "comment",
                "id": "pXZ2k2z2ZfID8ijfMfWemtdv"
              },
              {
                "text": "And the story goes on! Instead of adding 2, we should add 4 (2^2)",
                "nodeType": "comment",
                "id": "XPzj5TCUv0vbE2BARzWrkuet"
              },
              {
                "expr": "$d12Ms2toFTY4uc0xGFqncSZEL0 ,:= $zLSTe4vrUaK1cxjXDPZXb4t2L0 .at ,( ,2 ,)",
                "nodeType": "exprStmt",
                "id": "d12Ms2toFTY4uc0xGFqncSZE",
                "locals": [
                  {
                    "name": "third bit",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "d12Ms2toFTY4uc0xGFqncSZEL0"
                  }
                ]
              },
              {
                "nodeType": "if",
                "condition": "$d12Ms2toFTY4uc0xGFqncSZEL0 ,= ,1",
                "thenBody": [
                  {
                    "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 ,:= $IkdRUw4q2J4Q70sWKpGpywu8L0 ,+ ,4",
                    "nodeType": "exprStmt",
                    "id": "iETV85jh122aHBcROB4SmFPl",
                    "locals": []
                  }
                ],
                "isElseIf": false,
                "id": "fzrAIeB44YFyJIoI11RrhsUg",
                "locals": []
              },
              {
                "expr": "$IkdRUw4q2J4Q70sWKpGpywu8L0 .post_to_wall",
                "nodeType": "exprStmt",
                "id": "UipDf4aYjI3EikPF7C2UVyE1",
                "locals": []
              },
              {
                "text": "### the fourth bit",
                "nodeType": "comment",
                "id": "i7KP4x6xfh4pJsihvBBcJSJE"
              },
              {
                "text": "Try to do this one on your own. Remember indexing starts at 0...",
                "nodeType": "comment",
                "id": "Hfh08ffcq6PrDMKh4W4ON4jU"
              },
              {
                "text": "## exercise 2: 8-bit to decimal",
                "nodeType": "comment",
                "id": "CI82srToOGYGDnTKWTINiHt3"
              },
              {
                "text": "Let's make it harder. In this exercise, write the code that can read 8 bits.",
                "nodeType": "comment",
                "id": "DlitvOoJgd1h0g0l23AeW7j5"
              },
              {
                "expr": "$zLSTe4vrUaK1cxjXDPZXb4t2L0 ,:= :/267b #k3iy7PrIX9wz3ylVy1J0F4kB #xwVWTrjaistaY603w31BtKVX ,( 'scrub1 ,)",
                "nodeType": "exprStmt",
                "id": "zqahY034BG0oNxEOc2AeOHlK",
                "locals": []
              }
            ],
            "id": "sMJ4z55Zhpbaxy8k2P6hOiah"
          },
          {
            "name": "binary to decimal",
            "inParameters": [
              {
                "name": "binary",
                "type": "String",
                "nodeType": "localDef",
                "id": "xrrOOCnUU050cdcfinufdEAdP0"
              }
            ],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "let's declare a local variable to hold our decimal number",
                "nodeType": "comment",
                "id": "Jlg9pGgdvmB7zkufg6WCOh0U"
              },
              {
                "expr": "$x40Z1fdK2FFPTA7hsZzrMolrL0 ,:= ,0",
                "nodeType": "exprStmt",
                "id": "x40Z1fdK2FFPTA7hsZzrMolr",
                "locals": [
                  {
                    "name": "decimal",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "x40Z1fdK2FFPTA7hsZzrMolrL0"
                  }
                ]
              },
              {
                "text": "we process each character in the string from left to right",
                "nodeType": "comment",
                "id": "Odqw4brMY8jjJOdSlXQuQjr3"
              },
              {
                "bound": "$xrrOOCnUU050cdcfinufdEAdP0 .count",
                "body": [
                  {
                    "text": "`c` is the character at position `i`",
                    "nodeType": "comment",
                    "id": "wUZUNnhenf9ECz8P0FxwLAGf"
                  },
                  {
                    "expr": "$F8oSODPw1PDgNk7ADbbxwNYeL0 ,:= $xrrOOCnUU050cdcfinufdEAdP0 .at ,( $InlSOeQn4nEi2NxN3dJP5m2LB0 ,)",
                    "nodeType": "exprStmt",
                    "id": "F8oSODPw1PDgNk7ADbbxwNYe",
                    "locals": [
                      {
                        "name": "c",
                        "type": "String",
                        "nodeType": "localDef",
                        "id": "F8oSODPw1PDgNk7ADbbxwNYeL0"
                      }
                    ]
                  },
                  {
                    "nodeType": "if",
                    "condition": "$F8oSODPw1PDgNk7ADbbxwNYeL0 .equals ,( '1 ,)",
                    "thenBody": [
                      {
                        "text": "TODO: the bit at position `i` is equal to `1`, what should you do?",
                        "nodeType": "comment",
                        "id": "zKMQrdwgyBNavOBbR74h7VmN"
                      },
                      {
                        "expr": "",
                        "nodeType": "exprStmt",
                        "id": "H0LTszOJdmiQqefNSqfkE4v5",
                        "locals": []
                      }
                    ],
                    "elseBody": [
                      {
                        "text": "TODO: the bit at position `i` is equal to `0`, what should you do?",
                        "nodeType": "comment",
                        "id": "jnc72Gnhx3sqBH0qzpbKMcoo"
                      },
                      {
                        "expr": "",
                        "nodeType": "exprStmt",
                        "id": "xybuGA92GtO5iDwsdVYSLfIO",
                        "locals": []
                      }
                    ],
                    "isElseIf": false,
                    "id": "fEx35wJ7875K3hevylrUz1C1",
                    "locals": []
                  }
                ],
                "nodeType": "for",
                "id": "InlSOeQn4nEi2NxN3dJP5m2L",
                "locals": [
                  {
                    "name": "i",
                    "type": "Number",
                    "nodeType": "localDef",
                    "id": "InlSOeQn4nEi2NxN3dJP5m2LB0"
                  }
                ]
              },
              {
                "expr": "$x40Z1fdK2FFPTA7hsZzrMolrL0 .post_to_wall",
                "nodeType": "exprStmt",
                "id": "X2Xh1SaZB5GzL7n9MYfaajwa",
                "locals": []
              }
            ],
            "id": "xrrOOCnUU050cdcfinufdEAd"
          },
          {
            "nodeType": "library",
            "name": "binary reader",
            "libIdentifier": "bfhx",
            "libIsPublished": true,
            "scriptName": null,
            "exportedTypes": "",
            "exportedActions": [
              {
                "name": "read bits",
                "inParameters": [
                  {
                    "name": "s",
                    "type": "String",
                    "nodeType": "localDef",
                    "id": "xwVWTrjaistaY603w31BtKVXP0"
                  }
                ],
                "outParameters": [
                  {
                    "name": "bits",
                    "type": "Number Collection",
                    "nodeType": "localDef",
                    "id": "xwVWTrjaistaY603w31BtKVXP1"
                  }
                ],
                "isPrivate": false,
                "isOffloaded": false,
                "isTest": false,
                "isAsync": false,
                "nodeType": "libAction",
                "parentLibId": "k3iy7PrIX9wz3ylVy1J0F4kB",
                "id": "xwVWTrjaistaY603w31BtKVX"
              }
            ],
            "resolveClauses": [],
            "id": "k3iy7PrIX9wz3ylVy1J0F4kB"
          }
        ],
        "deletedDecls": [],
        "nodeType": "app",
        "id": "app"
      }
    },
    {
      "seqNo": 1,
      "time": 1365727464,
      "scriptId": null,
      "historyId": "2520365733354963564e67ff042-1121-476e-8234-15ecbe1347c8",
      "updateSize": 980,
      "updates": {
        "k1wGaqt9l6BSKUJdhu4v7lEn": {
          "text": "",
          "nodeType": "comment"
        },
        "sMJ4z55Zhpbaxy8k2P6hOiah": {
          "body": [
            "zKsOsdaVW3opXp1GDL3lNVrR",
            "H4N2odx842F5yeKfdEzD9GEf",
            "xJajsCdZPJ5rXcF3fpPONVH2",
            "xvEPax37YYyyS4V8zewjAGJy",
            "zLSTe4vrUaK1cxjXDPZXb4t2",
            "SvzF61Puc49Q7Sv41r4a4JS2",
            "IkdRUw4q2J4Q70sWKpGpywu8",
            "sEwzuJITxs3cV8W2mVqNP7Vw",
            "Gy5x2BW7Lt3y82el1n211lz1",
            "N8l2j82ZVpMIA8Mcy3JnGhRi",
            "MpS3SQzp4skiIpbcaQe0ni97",
            "sMZf2Et2OExwq4fjPmHbBZU4",
            "xsSy9wCqRGtsRrR85DbDzwQM",
            "QTBnxaCTBfjOPpVeIz24MC6k",
            "EioYP8U2PsstNqzO97zkuvJo",
            "xZoWG5fy5VhJfhndhm2R4e2P",
            "VVEQWvKayEuEdKwKrS9Vmwuo",
            "pZgRrVXw6sxpWSfwqTp32AER",
            "CJ6hDtZk6nszVZ8yOqEwrGs2",
            "xnQybfxOfn2Nv8LH5DXgEj53",
            "pXZ2k2z2ZfID8ijfMfWemtdv",
            "XPzj5TCUv0vbE2BARzWrkuet",
            "d12Ms2toFTY4uc0xGFqncSZE",
            "fzrAIeB44YFyJIoI11RrhsUg",
            "UipDf4aYjI3EikPF7C2UVyE1",
            "i7KP4x6xfh4pJsihvBBcJSJE",
            "Hfh08ffcq6PrDMKh4W4ON4jU",
            "CI82srToOGYGDnTKWTINiHt3",
            "DlitvOoJgd1h0g0l23AeW7j5",
            "zqahY034BG0oNxEOc2AeOHlK",
            "k1wGaqt9l6BSKUJdhu4v7lEn"
          ]
        },
        "app": {
          "rootId": "DDce1FoXvNKbaAWaO0mMYrv3"
        }
      }
    },
    {
      "seqNo": 2,
      "time": 1365727475,
      "scriptId": null,
      "historyId": "25203657332460643363f01af26-83d0-4307-afbd-398f8ef83e40",
      "updateSize": 108,
      "updates": {
        "k1wGaqt9l6BSKUJdhu4v7lEn": {
          "text": "{decl:binary to decimal}"
        },
        "app": {
          "rootId": "AR1Uixw2aW4OuMrJ4RJ2UaiL"
        }
      }
    },
    {
      "seqNo": 3,
      "time": 1365727495,
      "scriptId": null,
      "historyId": "25203657330487344790e10e96f-9263-4997-ad11-b2e0a7c4994b",
      "updateSize": 104,
      "updates": {
        "k1wGaqt9l6BSKUJdhu4v7lEn": {
          "text": "{decl:binary reader}"
        },
        "app": {
          "rootId": "Hsea6FLzhuRzZ2bRH8KZi4dC"
        }
      }
    },
    {
      "seqNo": 4,
      "time": 1365727519,
      "scriptId": null,
      "historyId": "25203657328068765073c3bb887-8e6d-40a3-aa83-f0efb0b231c3",
      "updateSize": 340,
      "updates": {
        "WTYs9yYHiehrqHOjPKEcj33h": {
          "name": "pic",
          "comment": "",
          "type": "Picture",
          "isReadonly": true,
          "isTransient": true,
          "nodeType": "art",
          "url": "https://az31353.vo.msecnd.net/pub/cnrroybo"
        },
        "app": {
          "rootId": "smLFDSs43Je9i04U52NCiEFR",
          "decls": [
            "sMJ4z55Zhpbaxy8k2P6hOiah",
            "xrrOOCnUU050cdcfinufdEAd",
            "k3iy7PrIX9wz3ylVy1J0F4kB",
            "WTYs9yYHiehrqHOjPKEcj33h"
          ]
        }
      }
    },
    {
      "seqNo": 5,
      "time": 1365727533,
      "scriptId": null,
      "historyId": "25203657326645427787f512acd-c4d9-4d76-a284-259e5a121c0e",
      "updateSize": 93,
      "updates": {
        "k1wGaqt9l6BSKUJdhu4v7lEn": {
          "text": "{pic:pic}"
        },
        "app": {
          "rootId": "VNr7TQNYmv7f83PuKlhTn2tg"
        }
      }
    },
    {
      "seqNo": 6,
      "time": 1365727546,
      "scriptId": null,
      "historyId": "25203657325315833894095fdee-8e0d-49fa-b6bc-1a57faff42c4",
      "updateSize": 97,
      "updates": {
        "k1wGaqt9l6BSKUJdhu4v7lEn": {
          "text": "{pic:pic:2x2}"
        },
        "app": {
          "rootId": "QKEGCV69NuAeXsUcv1gsJtYs"
        }
      }
    },
    {
      "seqNo": 7,
      "time": 1365727608,
      "scriptId": null,
      "historyId": "2520365731913343616021bc36e-7928-474a-b303-68396cc73ecb",
      "updateSize": 925,
      "updates": {
        "sMJ4z55Zhpbaxy8k2P6hOiah": {
          "body": [
            "zKsOsdaVW3opXp1GDL3lNVrR",
            "H4N2odx842F5yeKfdEzD9GEf",
            "xJajsCdZPJ5rXcF3fpPONVH2",
            "xvEPax37YYyyS4V8zewjAGJy",
            "zLSTe4vrUaK1cxjXDPZXb4t2",
            "SvzF61Puc49Q7Sv41r4a4JS2",
            "IkdRUw4q2J4Q70sWKpGpywu8",
            "sEwzuJITxs3cV8W2mVqNP7Vw",
            "Gy5x2BW7Lt3y82el1n211lz1",
            "N8l2j82ZVpMIA8Mcy3JnGhRi",
            "MpS3SQzp4skiIpbcaQe0ni97",
            "sMZf2Et2OExwq4fjPmHbBZU4",
            "xsSy9wCqRGtsRrR85DbDzwQM",
            "QTBnxaCTBfjOPpVeIz24MC6k",
            "EioYP8U2PsstNqzO97zkuvJo",
            "xZoWG5fy5VhJfhndhm2R4e2P",
            "VVEQWvKayEuEdKwKrS9Vmwuo",
            "pZgRrVXw6sxpWSfwqTp32AER",
            "CJ6hDtZk6nszVZ8yOqEwrGs2",
            "xnQybfxOfn2Nv8LH5DXgEj53",
            "pXZ2k2z2ZfID8ijfMfWemtdv",
            "XPzj5TCUv0vbE2BARzWrkuet",
            "d12Ms2toFTY4uc0xGFqncSZE",
            "fzrAIeB44YFyJIoI11RrhsUg",
            "UipDf4aYjI3EikPF7C2UVyE1",
            "i7KP4x6xfh4pJsihvBBcJSJE",
            "Hfh08ffcq6PrDMKh4W4ON4jU",
            "CI82srToOGYGDnTKWTINiHt3",
            "DlitvOoJgd1h0g0l23AeW7j5",
            "zqahY034BG0oNxEOc2AeOHlK"
          ]
        },
        "app": {
          "rootId": "f6nHJ3NJOOZ6MWbcMWC1AbpG"
        },
        "k1wGaqt9l6BSKUJdhu4v7lEn": null
      }
    },
    {
      "seqNo": 8,
      "time": 1365730319,
      "scriptId": null,
      "historyId": "2520365704800948783723b338e-7ff6-4644-b2e3-1e68e25d9bff",
      "updateSize": 45,
      "updates": {
        "app": {
          "rootId": "xUwmyAo6EoUonqaADrV5A20o"
        }
      }
    }
  ]
}