{
  "userid": "wonm",
  "guid": "63e036b6-03ca-49de-b108-2a76f67e327c",
  "lastStatus": "deleted",
  "items": [
    {
      "seqNo": 0,
      "time": 1354570295,
      "scriptId": "brzp",
      "historyId": "252047730504217313044fb05a2-f186-4aae-b33d-61d07e582541",
      "updateSize": 4965,
      "ast": {
        "textVersion": "v2.2,js,ctx",
        "jsonVersion": "v1.0,resolved,short",
        "name": "booleans",
        "comment": "A quick tutorial on boolean operators.\nLevel: beginner.",
        "icon": "Question",
        "color": "#ff00cc99",
        "autoIcon": "Question",
        "autoColor": "#00cc99",
        "platform": "current",
        "rootId": "Nw2plyJMm7S4zIk40kt6hbZu",
        "showAd": false,
        "isLibrary": false,
        "allowExport": false,
        "hasUniqueIds": false,
        "decls": [
          {
            "name": "main",
            "inParameters": [],
            "outParameters": [],
            "isPrivate": false,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "A Boolean variable may have two values: true or false.",
                "nodeType": "comment",
                "id": "R0FiX1Tu84bjzIqcKDQvFf2G"
              },
              {
                "expr": "$JQPbGYqrfmtJ40BjaX2A6RXnL0 ,:= T",
                "nodeType": "exprStmt",
                "id": "JQPbGYqrfmtJ40BjaX2A6RXn",
                "locals": [
                  {
                    "name": "t",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "JQPbGYqrfmtJ40BjaX2A6RXnL0"
                  }
                ]
              },
              {
                "expr": "$iXGUcW4SL2RnuDskN4J6qrBqL0 ,:= F",
                "nodeType": "exprStmt",
                "id": "iXGUcW4SL2RnuDskN4J6qrBq",
                "locals": [
                  {
                    "name": "f",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "iXGUcW4SL2RnuDskN4J6qrBqL0"
                  }
                ]
              },
              {
                "text": "(post Boolean to wall is a little helper method to pretty print the value)",
                "nodeType": "comment",
                "id": "x2pDJ4DBogmfcepqtHKO9jon"
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 't ,, $JQPbGYqrfmtJ40BjaX2A6RXnL0 ,)",
                "nodeType": "exprStmt",
                "id": "X5Qlu7ozHMw9m0d7MAIjnSPg",
                "locals": []
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 'f ,, $iXGUcW4SL2RnuDskN4J6qrBqL0 ,)",
                "nodeType": "exprStmt",
                "id": "Trc2nGcX2YScgwR8pD2jgzrC",
                "locals": []
              },
              {
                "text": "'not' is a unary operator that negates a Boolean value.",
                "nodeType": "comment",
                "id": "n5LXueVycTWI7F8RQNrSWYPg"
              },
              {
                "expr": "$sUVM7ttcWakJyivJQR6twlRZL0 ,:= ,not $JQPbGYqrfmtJ40BjaX2A6RXnL0",
                "nodeType": "exprStmt",
                "id": "sUVM7ttcWakJyivJQR6twlRZ",
                "locals": [
                  {
                    "name": "nt",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "sUVM7ttcWakJyivJQR6twlRZL0"
                  }
                ]
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 'not_true ,, $sUVM7ttcWakJyivJQR6twlRZL0 ,)",
                "nodeType": "exprStmt",
                "id": "lF1wNoplpP6kb4UzvI2nlR4r",
                "locals": []
              },
              {
                "text": "'and' is a binary operator that computes the logical conjunction of two Boolean values. 'and' results in true if both of its operands are true, otherwise in false. The second operand is not evaluated if the first operand is false.",
                "nodeType": "comment",
                "id": "Ie4QPyzIrhMUJCdREoCMstty"
              },
              {
                "expr": "$kAE9BPKBgDc8QbjeKABg1oZYL0 ,:= $JQPbGYqrfmtJ40BjaX2A6RXnL0 ,and $iXGUcW4SL2RnuDskN4J6qrBqL0",
                "nodeType": "exprStmt",
                "id": "kAE9BPKBgDc8QbjeKABg1oZY",
                "locals": [
                  {
                    "name": "tandf",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "kAE9BPKBgDc8QbjeKABg1oZYL0"
                  }
                ]
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 'true_and_false ,, $kAE9BPKBgDc8QbjeKABg1oZYL0 ,)",
                "nodeType": "exprStmt",
                "id": "aWIWZRuS1F4X7pK6I6uuiyjo",
                "locals": []
              },
              {
                "text": "'or' is a binary operator that computes the logical disjunction of two Boolean values. 'or' results in true if any of its operands is true, otherwise in false. The second operand is not evaluated if the first operand is true.",
                "nodeType": "comment",
                "id": "ipGSimRQfbYo4Foyknh8kuBd"
              },
              {
                "expr": "$cQNUZhQrZrrHcTF2J2VZvzYtL0 ,:= $JQPbGYqrfmtJ40BjaX2A6RXnL0 ,or $iXGUcW4SL2RnuDskN4J6qrBqL0",
                "nodeType": "exprStmt",
                "id": "cQNUZhQrZrrHcTF2J2VZvzYt",
                "locals": [
                  {
                    "name": "torf",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "cQNUZhQrZrrHcTF2J2VZvzYtL0"
                  }
                ]
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 'true_or_false ,, $cQNUZhQrZrrHcTF2J2VZvzYtL0 ,)",
                "nodeType": "exprStmt",
                "id": "t0OpON9WZTt1E5PgoV4g8zj6",
                "locals": []
              },
              {
                "text": "The oreprator precedence is 'not', 'and' then 'or'. In doubt, use parenthesis.",
                "nodeType": "comment",
                "id": "GgzK469YHch7gwkEGJiMMNCC"
              },
              {
                "expr": "$xeNvUdzYhKDHSJVOPwEKXSJkL0 ,:= ,not $JQPbGYqrfmtJ40BjaX2A6RXnL0 ,and ,not $iXGUcW4SL2RnuDskN4J6qrBqL0 ,or $JQPbGYqrfmtJ40BjaX2A6RXnL0",
                "nodeType": "exprStmt",
                "id": "xeNvUdzYhKDHSJVOPwEKXSJk",
                "locals": [
                  {
                    "name": "mystery",
                    "type": "Boolean",
                    "nodeType": "localDef",
                    "id": "xeNvUdzYhKDHSJVOPwEKXSJkL0"
                  }
                ]
              },
              {
                "expr": ":code #uLprNUUVAuibnaG7L8xI0hrH ,( 'not_true_and_false_or_true ,, $xeNvUdzYhKDHSJVOPwEKXSJkL0 ,)",
                "nodeType": "exprStmt",
                "id": "RkKIvd9YEgcxt74A31mCxNkh",
                "locals": []
              }
            ],
            "id": "blXy0dqfNjfb5l85UH5jBDmr"
          },
          {
            "name": "post Boolean to wall",
            "inParameters": [
              {
                "name": "name",
                "type": "String",
                "nodeType": "localDef",
                "id": "uLprNUUVAuibnaG7L8xI0hrHP0"
              },
              {
                "name": "t",
                "type": "Boolean",
                "nodeType": "localDef",
                "id": "uLprNUUVAuibnaG7L8xI0hrHP1"
              }
            ],
            "outParameters": [],
            "isPrivate": true,
            "isOffloaded": false,
            "isTest": false,
            "isAsync": false,
            "nodeType": "action",
            "body": [
              {
                "text": "Prints a Boolean value to the wall.",
                "nodeType": "comment",
                "id": "ApYNQ66bePHa4pbnqzcUNdug"
              },
              {
                "expr": "$XoDkqYkNhweqtddslWD6soGuL0 ,:= $uLprNUUVAuibnaG7L8xI0hrHP0 ,∥ '_/003d_ ,∥ $uLprNUUVAuibnaG7L8xI0hrHP1 .to_string",
                "nodeType": "exprStmt",
                "id": "XoDkqYkNhweqtddslWD6soGu",
                "locals": [
                  {
                    "name": "s",
                    "type": "String",
                    "nodeType": "localDef",
                    "id": "XoDkqYkNhweqtddslWD6soGuL0"
                  }
                ]
              },
              {
                "expr": "$XoDkqYkNhweqtddslWD6soGuL0 .post_to_wall",
                "nodeType": "exprStmt",
                "id": "o0XRpj5ZX3LeCzXfd45g195O",
                "locals": []
              }
            ],
            "id": "uLprNUUVAuibnaG7L8xI0hrH"
          }
        ],
        "deletedDecls": [],
        "nodeType": "app",
        "id": "app"
      }
    },
    {
      "seqNo": 1,
      "time": 1354570360,
      "scriptId": "brzp",
      "historyId": "252047730439656830752a1981b-e767-4fa8-9e56-d995a387ed10",
      "updateSize": 2,
      "updates": {}
    }
  ]
}